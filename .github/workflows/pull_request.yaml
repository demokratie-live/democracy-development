name: Pull Request

on:
  pull_request:
    paths:
      - 'services/**'
      - 'bundestag.io/**'
      - 'democracy/**'
    branches:
      - 'master'

jobs:
  analyse-changed-services:
    runs-on: ubuntu-latest
    outputs:
      CHANGED_PACKAGES: ${{ steps.changed-packages.outputs.CHANGED_PACKAGES }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get PNPM version from package.json
        id: pnpm-version
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager.replace('pnpm@', '')")
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_OUTPUT
          echo "Using PNPM version: $PNPM_VERSION"

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.PNPM_VERSION }}

      - run: pnpm --version

      - name: Analyze changed services
        run: |
          pnpm list -r --json --filter "...[origin/master]" --changed-files-ignore-pattern="**/(garden.yml|.dockerignore)" | jq '[.[] | select(.private == false) | {name, path}]' > ./tmp.json
          cat ./tmp.json
          CHANGED_PACKAGES=$(jq '[.[] | .name]' ./tmp.json)
          echo CHANGED_PACKAGES=$CHANGED_PACKAGES  >> $GITHUB_OUTPUT
          echo CHANGED_PACKAGES=$CHANGED_PACKAGES
        id: changed-packages

  build-and-push:
    uses: ./.github/workflows/build-and-push.yaml
    needs: analyse-changed-services
    with:
      changedPackages: ${{ needs.analyse-changed-services.outputs.CHANGED_PACKAGES }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  update-infrastructure:
    runs-on: ubuntu-latest
    needs: [analyse-changed-services]
    if: ${{ needs.analyse-changed-services.outputs.CHANGED_PACKAGES != '[]' }}
    steps:
      - name: Checkout Infrastructure Repository
        uses: actions/checkout@v4
        with:
          repository: demokratie-live/infrastructure
          token: ${{ secrets.ACTION_INFRASTRUCTURE_PR }}
          path: infrastructure

      - name: Setup Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Generate Branch Name
        id: branch
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BRANCH_NAME="update-images-pr-${PR_NUMBER}"
          echo "name=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: Create Branch
        working-directory: ./infrastructure
        run: |
          git checkout -b ${{ steps.branch.outputs.name }}

      - name: Update Kubernetes Manifests
        working-directory: ./infrastructure
        run: |
          PACKAGES=$(echo '${{ needs.analyse-changed-services.outputs.CHANGED_PACKAGES }}' | jq -r '.[]')
          PR_NUMBER=${{ github.event.pull_request.number }}
          SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)
          KUSTOMIZE_DIR="kustomize/base/main"

          echo "Changed packages: $PACKAGES"

          if [ ! -d "$KUSTOMIZE_DIR" ]; then
            echo "Error: Kustomize directory $KUSTOMIZE_DIR not found"
            exit 1
          fi

          cd $KUSTOMIZE_DIR

          CHANGES_MADE=false

          # Update all changed packages at once using kustomize edit set image
          if [ -n "$PACKAGES" ]; then
            echo "Updating image tags for all changed packages"
            
            for PACKAGE in $(echo $PACKAGES | tr '\n' ' '); do
              # Use democracy/$PACKAGE as the image name
              IMAGE_NAME="democracy/$PACKAGE"
              NEW_TAG="pr-$PR_NUMBER-$SHA_SHORT"
              
              echo "Running: kustomize edit set image $IMAGE_NAME=$IMAGE_NAME:$NEW_TAG"
              
              # Update the image using kustomize
              if kustomize edit set image "$IMAGE_NAME=$IMAGE_NAME:$NEW_TAG"; then
                CHANGES_MADE=true
                echo "Updated image tag for $IMAGE_NAME to $NEW_TAG"
              else
                echo "Failed to update image tag for $IMAGE_NAME"
              fi
            done
          fi

          echo "CHANGES_MADE=$CHANGES_MADE" >> $GITHUB_ENV

      - name: Commit and Push Changes
        id: commit
        working-directory: ./infrastructure
        if: env.CHANGES_MADE == 'true'
        run: |
          git add .
          git status

          git commit -m "Update image tags for PR #${{ github.event.pull_request.number }}"
          git push --set-upstream origin ${{ steps.branch.outputs.name }}
          echo "committed=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request in Infrastructure Repository
        if: env.CHANGES_MADE == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.ACTION_INFRASTRUCTURE_PR }}
          path: infrastructure
          branch: ${{ steps.branch.outputs.name }}
          base: main
          title: 'Update image tags for PR #${{ github.event.pull_request.number }}'
          body: |
            This PR updates Kubernetes manifests with new image tags for services changed in PR #${{ github.event.pull_request.number }}.

            Changes:
            ${{ needs.analyse-changed-services.outputs.CHANGED_PACKAGES }}

            Original PR: ${{ github.event.pull_request.html_url }}
          labels: automated-pr, infrastructure-update
