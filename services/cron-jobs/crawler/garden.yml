kind: Build
name: import-procedures
description: Import procedures for the bundestag.io API
type: container
source:
  path: ../../../
include:
  - ./**/*
  - ./infra/Dockerfile
spec:
  dockerfile: ./infra/Dockerfile
  buildArgs:
    NODE_VERSION: 18.18.2
    SERVICE: crawler
    SERVICE_PATH: services/cron-jobs/crawler
  extraFlags: ['--load']

---
kind: Deploy
name: import-procedures
type: kubernetes
description: Deploy the importer of procedures for the bundestag.io API
dependencies: [build.import-procedures, deploy.mongo]

varfiles:
  - .env
  - .env.local

variables:
  DB_URL: mongodb://democracy-mongo:27017/bundestagio

spec:
  files:
    - ./manifests/ConfigMap.yaml
    # - ./manifests/CronJob.yaml
    - ./manifests/Secret.yaml
    - ./manifests/Deployment.garden.yaml

  defaultTarget:
    kind: Deployment
    name: import-procedures

  sync:
    paths:
      - containerPath: /services/cron-jobs/crawler/src
        sourcePath: src
        mode: one-way
    overrides:
      - command: [pnpm, --filter, crawler, run, garden:dev]

  patchResources:
    $if: ${this.mode == "sync"}
    $then:
      - name: import-procedures
        kind: Deployment
        patch:
          spec:
            template:
              spec:
                containers:
                  - name: import-procedures
                    image: ${actions.build.import-procedures.outputs.deploymentImageId}
      - name: dip-api-token
        kind: Secret
        patch:
          data:
            DIP_API_KEY: ${base64Encode(var.DIP_API_KEY)}
    $else:
      - name: import-procedures
        kind: CronJob
        patch:
          spec:
            jobTemplate:
              spec:
                template:
                  spec:
                    containers:
                      - name: import-procedures
                        image: ${actions.build.import-procedures.outputs.deploymentImageId}
      - name: dip-api-token
        kind: Secret
        patch:
          data:
            DIP_API_KEY: ${base64Encode(var.DIP_API_KEY)}
