ARG  NODE_VERSION

FROM node:${NODE_VERSION}-alpine AS base
ARG  SERVICE
ARG  SERVICE_PATH
ENV SERVICE_PATH ${SERVICE_PATH}

FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=$SERVICE --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
ARG  SERVICE
RUN apk add --no-cache libc6-compat python3 make g++ git
RUN apk update
WORKDIR /app
 
# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/yarn.lock ./yarn.lock
RUN yarn install
 
# Build the project
COPY --from=builder /app/out/full/ .
RUN yarn turbo run build --filter=$SERVICE
RUN yarn install --prod --frozen-lockfile --ignore-scripts --prefer-offline
 
FROM base AS runner
WORKDIR /app
 
# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 runuser
USER runuser
 
COPY --from=installer /app/$SERVICE_PATH/package.json .
COPY --from=installer /app/node_modules ./node_modules
COPY --from=installer --chown=runuser:nodejs /app/$SERVICE_PATH/build ./build
 
CMD yarn --cwd $SERVICE_PATH start
