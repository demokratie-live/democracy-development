apiVersion: v1
kind: Namespace
metadata:
  name: democracy-internal
---
apiVersion: v1
data:
  BUNDESTAGIO_SERVER_URL: http://bundestagio-srv:3100/
  BUNDESTAGIO_SERVER_URL_CLIENT: https://internal.admin.bundestag.io/graphql
kind: ConfigMap
metadata:
  name: bio-admin-config-cbdhkhkc48
  namespace: democracy-internal
---
apiVersion: v1
data:
  CRON_CONFERENCEWEEKDETAILS: '*/15 * * * *'
  CRON_DEPUTY_PROFILES: 0 4 * * *
  CRON_NAMED_POLLS: 15 3 * * *
  CRON_NAMED_POLLS_DEPUTIES: 45 3 * * *
  CRON_PROCEDURES: 0 3 * * *
  CRON_START_ON_INIT: "true"
  DB_URL: mongodb://mongo-0.mongo/bundestagio
  GRAPHIQL: /graphiql
  GRAPHQL_PATH: /
  NODE_ENV: production
  PERIODS: "19"
  SCRAPER_USER_AGEND: DEMOCRACY-NEW-SERVER
  VOYAGER: "true"
kind: ConfigMap
metadata:
  name: bio-api-config-627b78g4g2
  namespace: democracy-internal
---
apiVersion: v1
data:
  AUTH_JWT_REFRESH_TTL: 5m
  AUTH_JWT_TTL: 1m
  BUNDESTAGIO_SERVER_URL: http://bundestagio-srv:3100/
  CRON_DEPUTY_PROFILES: '*/15 * * * *'
  CRON_NAMED_POLLS: '*/15 * * * *'
  CRON_PROCEDURES: '*/5 * * * *'
  CRON_QUE_PUSHS_CONFERENCE_WEEK: 0 14 * * SUN
  CRON_QUE_PUSHS_VOTE_CONFERENCE_WEEK: 0 4 * * MON-FRI
  CRON_QUE_PUSHS_VOTE_TOP100: 0 4 * * MON-FRI
  CRON_SEND_QUED_PUSHS: '*/5 7-22 * * *'
  CRON_SHEDULE_BIO_RESYNC: 55 3 * */1 *
  CRON_START_ON_INIT: "true"
  DB_URL: mongodb://mongo-0.mongo/democracy
  DEBUG: "false"
  GRAPHIQL: "true"
  NODE_ENV: production
  SMS_SIMULATE: "true"
  SMS_VERIFICATION: "true"
  STAGE: internal
kind: ConfigMap
metadata:
  name: democracy-api-config-7hmh2k8h45
  namespace: democracy-internal
---
apiVersion: v1
data:
  GRAPHQL_URL: https://internal.api.democracy-app.de
  GRAPHQL_URL_SERVER: http://democracy-api-srv:3000/
kind: ConfigMap
metadata:
  name: democracy-app-config-9db2mt67kb
  namespace: democracy-internal
---
apiVersion: v1
kind: Service
metadata:
  name: bundestagio-admin-srv
  namespace: democracy-internal
spec:
  ports:
  - name: bundestagio-admin
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: bundestagio-admin
---
apiVersion: v1
kind: Service
metadata:
  name: bundestagio-srv
  namespace: democracy-internal
spec:
  ports:
  - name: bundestagio
    port: 3100
    protocol: TCP
    targetPort: 3100
  selector:
    app: bundestagio
---
apiVersion: v1
kind: Service
metadata:
  name: democracy-api-srv
  namespace: democracy-internal
spec:
  ports:
  - name: democracy-api
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: democracy-api
---
apiVersion: v1
kind: Service
metadata:
  name: democracy-app-srv
  namespace: democracy-internal
spec:
  ports:
  - name: democracy-app
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: democracy-app
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: democracy-internal
spec:
  clusterIP: None
  ports:
  - name: mongo
    port: 27017
    targetPort: 27017
  selector:
    app: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: nats-srv
  namespace: democracy-internal
spec:
  ports:
  - name: client
    port: 4222
    protocol: TCP
    targetPort: 4222
  - name: monitoring
    port: 8222
    protocol: TCP
    targetPort: 8222
  selector:
    app: nats
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
    service.beta.kubernetes.io/do-loadbalancer-hostname: kubernetes.api.democracy-app.de
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    helm.sh/chart: ingress-nginx-2.0.3
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bundestagio-admin-depl
  namespace: democracy-internal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bundestagio-admin
  template:
    metadata:
      labels:
        app: bundestagio-admin
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: bio-admin-config-cbdhkhkc48
        - secretRef:
            name: bio-admin-login
            optional: true
        - secretRef:
            name: bundestag-result-edit-token
            optional: true
        image: docker.pkg.github.com/demokratie-live/bundestag.io-admin/bundestag.io-admin:2.1.2-dev
        livenessProbe:
          httpGet:
            path: /health-check
            port: 3000
          initialDelaySeconds: 180
          timeoutSeconds: 10
        name: bundestagio-admin
        readinessProbe:
          httpGet:
            path: /health-check
            port: 3000
          periodSeconds: 15
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 500M
          requests:
            cpu: 30m
            memory: 100M
      imagePullSecrets:
      - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bundestagio-depl
  namespace: democracy-internal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bundestagio
  template:
    metadata:
      labels:
        app: bundestagio
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: bio-api-config-627b78g4g2
        - secretRef:
            name: bundestag-result-edit-token
            optional: true
        image: docker.pkg.github.com/demokratie-live/bundestag.io/bundestag.io:0.1.23-dev
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 3100
          initialDelaySeconds: 60
          periodSeconds: 30
        name: bundestagio
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 3100
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 500M
          requests:
            cpu: 50m
            memory: 150M
      imagePullSecrets:
      - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: democracy-api-depl
  namespace: democracy-internal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: democracy-api
  template:
    metadata:
      labels:
        app: democracy-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: democracy-api-config-7hmh2k8h45
        - secretRef:
            name: democracy-api-secrets
            optional: true
        image: docker.pkg.github.com/demokratie-live/democracy-server/democracy-server:0.2.4-dev
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 3000
          periodSeconds: 180
        name: democracy-api
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 3000
          initialDelaySeconds: 15
        resources:
          limits:
            cpu: 1000m
            memory: 1000M
          requests:
            cpu: 500m
            memory: 500M
      imagePullSecrets:
      - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: democracy-app-depl
  namespace: democracy-internal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: democracy-app
  template:
    metadata:
      labels:
        app: democracy-app
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: democracy-app-config-9db2mt67kb
        image: docker.pkg.github.com/demokratie-live/democracy-desktop/democracy-desktop:0.0.3-dev
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 180
          timeoutSeconds: 10
        name: democracy-app
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          periodSeconds: 15
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 300M
          requests:
            cpu: 50m
            memory: 100M
      imagePullSecrets:
      - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-depl
  namespace: democracy-internal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - args:
        - -p
        - "4222"
        - -m
        - "8222"
        - -hbi
        - 5s
        - -hbt
        - 5s
        - -hbf
        - "2"
        - -SD
        - -cid
        - ticketing
        image: nats-streaming:0.17.0
        name: nats
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: democracy-internal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - containerPort: 27017
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
        volumeMounts:
        - mountPath: /data/db
          name: mongo-volume
      terminationGracePeriodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: mongo-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    email: contact@democracy-deutschland.de
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: ingress-service
  namespace: democracy-internal
spec:
  rules:
  - host: internal.api.democracy-app.de
    http:
      paths:
      - backend:
          serviceName: democracy-api-srv
          servicePort: 3000
        path: /?(.*)
  - host: internal.democracy-app.de
    http:
      paths:
      - backend:
          serviceName: democracy-app-srv
          servicePort: 3000
        path: /?(.*)
  - host: internal.api.bundestag.io
    http:
      paths:
      - backend:
          serviceName: bundestagio-srv
          servicePort: 3100
        path: /?(.*)
  - host: internal.admin.bundestag.io
    http:
      paths:
      - backend:
          serviceName: bundestagio-admin-srv
          servicePort: 3000
        path: /?(.*)
  tls:
  - hosts:
    - internal.api.democracy-app.de
    - internal.democracy-app.de
    - internal.api.bundestag.io
    - internal.admin.bundestag.io
    secretName: democracy-tls
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: ingress-monitoring-service
  namespace: monitoring
spec:
  rules:
  - host: monitoring.democracy-app.de
    http:
      paths:
      - backend:
          serviceName: monitoring-grafana
          servicePort: 80
        path: /?(.*)
  tls:
  - hosts:
    - monitoring.democracy-app.de
    secretName: democracy-tls
