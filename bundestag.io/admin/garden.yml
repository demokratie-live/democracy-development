kind: Build
name: admin
description: Admin
type: container
source:
  path: ../../
include:
  - ./**/*
  - ./infra/Dockerfile
spec:
  dockerfile: ./infra/Dockerfile
  targetStage:
    $if: ${this.mode == "sync"}
    $then: dev
    $else: runner
  buildArgs:
    NODE_VERSION: 18.18.2
    SERVICE: bundestag.io-admin
    SERVICE_PATH: bundestag.io/admin

---
kind: Deploy
name: admin
type: kubernetes
description: Deploy the Admin
dependencies: [build.admin, deploy.bundestag-io-api, deploy.votes-ai, deploy.non-named-votes-ai, deploy.procedures]

variables:
  BIO_EDIT_TOKEN: ${actions.deploy.bundestag-io-api.var.BIO_EDIT_TOKEN}
  AI_SERVICE_ACCESS_TOKEN: ${actions.deploy.votes-ai.var.ACCESS_TOKEN}
  AI_SIMULATION: true
  NON_NAMED_VOTES_AI_SECRET: ${actions.deploy.non-named-votes-ai.var.NON_NAMED_VOTES_AI_SECRET}

spec:
  files: [./manifests/*] # <--- Tell Garden what manifests to use

  defaultTarget: # <--- This tells Garden what "target" to use for logs, code syncing and more
    kind: Deployment
    name: admin

  sync:
    paths:
      - containerPath: /app/bundestag.io/admin/src
        sourcePath: src
        mode: one-way
    overrides:
      - command: [pnpm, dev]

  # Patch the K8s manifests for the api service so that we can set the correct image
  patchResources:
    - name: admin
      kind: Deployment
      patch:
        spec:
          template:
            spec:
              containers:
                - name: admin
                  image: ${actions.build.admin.outputs.deploymentImageId} # <--- Reference the output from the Build action
